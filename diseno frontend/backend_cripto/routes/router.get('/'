const express = require('express');
const router = express.Router();
const Cryptocurrency = require('../models/Cryptocurrency');
const { protect } = require('../middleware/authMiddleware');

router.get('/', protect, async (req, res) => {
    try {
        const cryptos = await Cryptocurrency.find();
        res.status(200).json({ success: true, count: cryptos.length, data: cryptos });
    } catch (error) {
        console.error(error.message);
        res.status(500).send('Error del servidor');
    }
});

router.get('/:id', protect, async (req, res) => {
    try {
        const crypto = await Cryptocurrency.findById(req.params.id);

        if (!crypto) {
            return res.status(404).json({ success: false, msg: 'Criptomoneda no encontrada' });
        }

        res.status(200).json({ success: true, data: crypto });
    } catch (error) {
        console.error(error.message);
        // Manejo específico si el ID no es válido
        if (error.kind === 'ObjectId') {
            return res.status(400).json({ success: false, msg: 'ID de criptomoneda inválido' });
        }
        res.status(500).send('Error del servidor');
    }
});

module.exports = router;